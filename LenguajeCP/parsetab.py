
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONCATleftMASMENOSleftPORDIVIDIDOrightUMENOSCADENA CONCAT DECIMAL DEF DIVIDIDO DO ELSE EN ENTERO HASTA ID IF IGUAL IGUALQUE IMPRIMIR LLAVDER LLAVIZQ MAS MAYQUE MENOS MENQUE MIENTRAS NIGUALQUE NUMERO PARA PARDER PARIZQ PASO POR PTCOMA RETURNinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion : imprimir_instr\n                   | definicion_instr\n                   | asignacion_instr\n                   | mientrastanto_instr\n                   | si_instr\n                   | si_no_instr\n                   | para_instr\n                   imprimir_instr     : IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMAdefinicion_instr   : NUMERO ID PTCOMAasignacion_instr   : ID IGUAL expresion_numerica PTCOMAmientrastanto_instr     : MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDERsi_instr           : IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDERsi_no_instr      : IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDERpara_instr : PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDERexpresion_numerica : expresion_numerica MAS expresion_numerica\n                        | expresion_numerica MENOS expresion_numerica\n                        | expresion_numerica POR expresion_numerica\n                        | expresion_numerica DIVIDIDO expresion_numericaexpresion_numerica : MENOS expresion_numerica %prec UMENOSexpresion_numerica : PARIZQ expresion_numerica PARDERexpresion_numerica : ENTERO\n                        | DECIMALexpresion_numerica   : IDexpresion_cadena     : expresion_cadena CONCAT expresion_cadenaexpresion_cadena     : CADENAexpresion_cadena     : expresion_numericaexpresion_logica : expresion_numerica MAYQUE expresion_numerica\n                        | expresion_numerica MENQUE expresion_numerica\n                        | expresion_numerica IGUALQUE expresion_numerica\n                        | expresion_numerica NIGUALQUE expresion_numerica'
    
_lr_action_items = {'IMPRIMIR':([0,2,3,4,5,6,7,8,9,10,17,32,46,55,61,66,68,69,71,72,73,75,76,77,78,79,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-2,-12,-13,-11,11,11,11,11,-14,-15,11,11,11,-17,11,-16,]),'NUMERO':([0,2,3,4,5,6,7,8,9,10,16,17,32,46,55,61,66,68,69,71,72,73,75,76,77,78,79,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,23,-2,-12,-13,-11,12,12,12,12,-14,-15,12,12,12,-17,12,-16,]),'ID':([0,2,3,4,5,6,7,8,9,10,12,17,18,20,21,22,24,28,32,40,41,42,43,44,46,48,49,50,51,55,61,66,68,69,71,72,73,75,76,77,78,79,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,19,-2,31,31,31,31,31,31,-12,31,31,31,31,31,-13,31,31,31,31,-11,13,13,13,13,-14,-15,13,13,13,-17,13,-16,]),'MIENTRAS':([0,2,3,4,5,6,7,8,9,10,17,32,46,55,61,66,68,69,71,72,73,75,76,77,78,79,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-2,-12,-13,-11,14,14,14,14,-14,-15,14,14,14,-17,14,-16,]),'IF':([0,2,3,4,5,6,7,8,9,10,17,32,46,55,61,66,68,69,71,72,73,75,76,77,78,79,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-2,-12,-13,-11,15,15,15,15,-14,-15,15,15,15,-17,15,-16,]),'PARA':([0,2,3,4,5,6,7,8,9,10,17,32,46,55,61,66,68,69,71,72,73,75,76,77,78,79,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-2,-12,-13,-11,16,16,16,16,-14,-15,16,16,16,-17,16,-16,]),'$end':([1,2,3,4,5,6,7,8,9,10,17,32,46,55,71,72,77,79,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-12,-13,-11,-14,-15,-17,-16,]),'LLAVDER':([3,4,5,6,7,8,9,10,17,32,46,55,68,69,71,72,75,77,78,79,],[-3,-4,-5,-6,-7,-8,-9,-10,-2,-12,-13,-11,71,72,-14,-15,77,-17,79,-16,]),'PARIZQ':([11,14,15,18,20,21,22,24,28,40,41,42,43,44,48,49,50,51,],[18,21,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'IGUAL':([13,23,],[20,37,]),'CADENA':([18,40,],[26,26,]),'MENOS':([18,20,21,22,24,27,28,29,30,31,33,35,38,40,41,42,43,44,45,48,49,50,51,54,57,58,59,60,62,63,64,65,],[28,28,28,28,28,42,28,-24,-25,-26,42,42,42,28,28,28,28,28,-22,28,28,28,28,-23,-18,-19,-20,-21,42,42,42,42,]),'ENTERO':([18,20,21,22,24,28,37,40,41,42,43,44,48,49,50,51,67,],[29,29,29,29,29,29,53,29,29,29,29,29,29,29,29,29,70,]),'DECIMAL':([18,20,21,22,24,28,40,41,42,43,44,48,49,50,51,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'PTCOMA':([19,29,30,31,33,39,45,54,57,58,59,60,],[32,-24,-25,-26,46,55,-22,-23,-18,-19,-20,-21,]),'PARDER':([25,26,27,29,30,31,34,36,38,45,54,56,57,58,59,60,62,63,64,65,],[39,-28,-29,-24,-25,-26,47,52,54,-22,-23,-27,-18,-19,-20,-21,-30,-31,-32,-33,]),'CONCAT':([25,26,27,29,30,31,45,54,56,57,58,59,60,],[40,-28,-29,-24,-25,-26,-22,-23,-27,-18,-19,-20,-21,]),'MAS':([27,29,30,31,33,35,38,45,54,57,58,59,60,62,63,64,65,],[41,-24,-25,-26,41,41,41,-22,-23,-18,-19,-20,-21,41,41,41,41,]),'POR':([27,29,30,31,33,35,38,45,54,57,58,59,60,62,63,64,65,],[43,-24,-25,-26,43,43,43,-22,-23,43,43,-20,-21,43,43,43,43,]),'DIVIDIDO':([27,29,30,31,33,35,38,45,54,57,58,59,60,62,63,64,65,],[44,-24,-25,-26,44,44,44,-22,-23,44,44,-20,-21,44,44,44,44,]),'MAYQUE':([29,30,31,35,45,54,57,58,59,60,],[-24,-25,-26,48,-22,-23,-18,-19,-20,-21,]),'MENQUE':([29,30,31,35,45,54,57,58,59,60,],[-24,-25,-26,49,-22,-23,-18,-19,-20,-21,]),'IGUALQUE':([29,30,31,35,45,54,57,58,59,60,],[-24,-25,-26,50,-22,-23,-18,-19,-20,-21,]),'NIGUALQUE':([29,30,31,35,45,54,57,58,59,60,],[-24,-25,-26,51,-22,-23,-18,-19,-20,-21,]),'LLAVIZQ':([47,52,70,74,],[61,66,73,76,]),'HASTA':([53,],[67,]),'ELSE':([72,],[74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,61,66,73,76,],[2,68,69,75,78,]),'instruccion':([0,2,61,66,68,69,73,75,76,78,],[3,17,3,3,17,17,3,17,3,17,]),'imprimir_instr':([0,2,61,66,68,69,73,75,76,78,],[4,4,4,4,4,4,4,4,4,4,]),'definicion_instr':([0,2,61,66,68,69,73,75,76,78,],[5,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,61,66,68,69,73,75,76,78,],[6,6,6,6,6,6,6,6,6,6,]),'mientrastanto_instr':([0,2,61,66,68,69,73,75,76,78,],[7,7,7,7,7,7,7,7,7,7,]),'si_instr':([0,2,61,66,68,69,73,75,76,78,],[8,8,8,8,8,8,8,8,8,8,]),'si_no_instr':([0,2,61,66,68,69,73,75,76,78,],[9,9,9,9,9,9,9,9,9,9,]),'para_instr':([0,2,61,66,68,69,73,75,76,78,],[10,10,10,10,10,10,10,10,10,10,]),'expresion_cadena':([18,40,],[25,56,]),'expresion_numerica':([18,20,21,22,24,28,40,41,42,43,44,48,49,50,51,],[27,33,35,35,38,45,27,57,58,59,60,62,63,64,65,]),'expresion_logica':([21,22,],[34,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',135),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',139),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',145),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',149),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','gramatica.py',150),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','gramatica.py',151),
  ('instruccion -> mientrastanto_instr','instruccion',1,'p_instruccion','gramatica.py',152),
  ('instruccion -> si_instr','instruccion',1,'p_instruccion','gramatica.py',153),
  ('instruccion -> si_no_instr','instruccion',1,'p_instruccion','gramatica.py',154),
  ('instruccion -> para_instr','instruccion',1,'p_instruccion','gramatica.py',155),
  ('imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','gramatica.py',160),
  ('definicion_instr -> NUMERO ID PTCOMA','definicion_instr',3,'p_instruccion_definicion','gramatica.py',164),
  ('asignacion_instr -> ID IGUAL expresion_numerica PTCOMA','asignacion_instr',4,'p_asignacion_instr','gramatica.py',168),
  ('mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER','mientrastanto_instr',7,'p_mientras_instr','gramatica.py',172),
  ('si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER','si_instr',7,'p_if_instr','gramatica.py',176),
  ('si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','si_no_instr',11,'p_if_else_instr','gramatica.py',180),
  ('para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER','para_instr',9,'p_para_instr','gramatica.py',184),
  ('expresion_numerica -> expresion_numerica MAS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',188),
  ('expresion_numerica -> expresion_numerica MENOS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',189),
  ('expresion_numerica -> expresion_numerica POR expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',190),
  ('expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',191),
  ('expresion_numerica -> MENOS expresion_numerica','expresion_numerica',2,'p_expresion_unaria','gramatica.py',198),
  ('expresion_numerica -> PARIZQ expresion_numerica PARDER','expresion_numerica',3,'p_expresion_agrupacion','gramatica.py',202),
  ('expresion_numerica -> ENTERO','expresion_numerica',1,'p_expresion_number','gramatica.py',206),
  ('expresion_numerica -> DECIMAL','expresion_numerica',1,'p_expresion_number','gramatica.py',207),
  ('expresion_numerica -> ID','expresion_numerica',1,'p_expresion_id','gramatica.py',211),
  ('expresion_cadena -> expresion_cadena CONCAT expresion_cadena','expresion_cadena',3,'p_expresion_concatenacion','gramatica.py',215),
  ('expresion_cadena -> CADENA','expresion_cadena',1,'p_expresion_cadena','gramatica.py',219),
  ('expresion_cadena -> expresion_numerica','expresion_cadena',1,'p_expresion_cadena_numerico','gramatica.py',223),
  ('expresion_logica -> expresion_numerica MAYQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',227),
  ('expresion_logica -> expresion_numerica MENQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',228),
  ('expresion_logica -> expresion_numerica IGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',229),
  ('expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',230),
]
