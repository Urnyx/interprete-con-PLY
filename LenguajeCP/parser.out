Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEF
    DO
    EN
    PASO
    RETURN

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> definicion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> mientrastanto_instr
Rule 8     instruccion -> si_instr
Rule 9     instruccion -> si_no_instr
Rule 10    instruccion -> para_instr
Rule 11    imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
Rule 12    definicion_instr -> NUMERO ID PTCOMA
Rule 13    asignacion_instr -> ID IGUAL expresion_numerica PTCOMA
Rule 14    mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 15    si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 16    si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 17    para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER
Rule 18    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 19    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 20    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 21    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 22    expresion_numerica -> MENOS expresion_numerica
Rule 23    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 24    expresion_numerica -> ENTERO
Rule 25    expresion_numerica -> DECIMAL
Rule 26    expresion_numerica -> ID
Rule 27    expresion_cadena -> expresion_cadena CONCAT expresion_cadena
Rule 28    expresion_cadena -> CADENA
Rule 29    expresion_cadena -> expresion_numerica
Rule 30    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 31    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 32    expresion_logica -> expresion_numerica IGUALQUE expresion_numerica
Rule 33    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica

Terminals, with rules where they appear

CADENA               : 28
CONCAT               : 27
DECIMAL              : 25
DEF                  : 
DIVIDIDO             : 21
DO                   : 
ELSE                 : 16
EN                   : 
ENTERO               : 17 17 24
HASTA                : 17
ID                   : 12 13 26
IF                   : 15 16
IGUAL                : 13 17
IGUALQUE             : 32
IMPRIMIR             : 11
LLAVDER              : 14 15 16 16 17
LLAVIZQ              : 14 15 16 16 17
MAS                  : 18
MAYQUE               : 30
MENOS                : 19 22
MENQUE               : 31
MIENTRAS             : 14
NIGUALQUE            : 33
NUMERO               : 12 17
PARA                 : 17
PARDER               : 11 14 15 16 23
PARIZQ               : 11 14 15 16 23
PASO                 : 
POR                  : 20
PTCOMA               : 11 12 13
RETURN               : 
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
definicion_instr     : 5
expresion_cadena     : 11 27 27
expresion_logica     : 14 15 16
expresion_numerica   : 13 18 18 19 19 20 20 21 21 22 23 29 30 30 31 31 32 32 33 33
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 14 15 16 16 17
mientrastanto_instr  : 7
para_instr           : 10
si_instr             : 8
si_no_instr          : 9

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    $end            reduce using rule 1 (init -> instrucciones .)
    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instruccion                    shift and go to state 17
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 3

    (3) instrucciones -> instruccion .

    IMPRIMIR        reduce using rule 3 (instrucciones -> instruccion .)
    NUMERO          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MIENTRAS        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    IMPRIMIR        reduce using rule 4 (instruccion -> imprimir_instr .)
    NUMERO          reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    MIENTRAS        reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    PARA            reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> definicion_instr .

    IMPRIMIR        reduce using rule 5 (instruccion -> definicion_instr .)
    NUMERO          reduce using rule 5 (instruccion -> definicion_instr .)
    ID              reduce using rule 5 (instruccion -> definicion_instr .)
    MIENTRAS        reduce using rule 5 (instruccion -> definicion_instr .)
    IF              reduce using rule 5 (instruccion -> definicion_instr .)
    PARA            reduce using rule 5 (instruccion -> definicion_instr .)
    $end            reduce using rule 5 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> definicion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    IMPRIMIR        reduce using rule 6 (instruccion -> asignacion_instr .)
    NUMERO          reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    MIENTRAS        reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    PARA            reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> mientrastanto_instr .

    IMPRIMIR        reduce using rule 7 (instruccion -> mientrastanto_instr .)
    NUMERO          reduce using rule 7 (instruccion -> mientrastanto_instr .)
    ID              reduce using rule 7 (instruccion -> mientrastanto_instr .)
    MIENTRAS        reduce using rule 7 (instruccion -> mientrastanto_instr .)
    IF              reduce using rule 7 (instruccion -> mientrastanto_instr .)
    PARA            reduce using rule 7 (instruccion -> mientrastanto_instr .)
    $end            reduce using rule 7 (instruccion -> mientrastanto_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> mientrastanto_instr .)


state 8

    (8) instruccion -> si_instr .

    IMPRIMIR        reduce using rule 8 (instruccion -> si_instr .)
    NUMERO          reduce using rule 8 (instruccion -> si_instr .)
    ID              reduce using rule 8 (instruccion -> si_instr .)
    MIENTRAS        reduce using rule 8 (instruccion -> si_instr .)
    IF              reduce using rule 8 (instruccion -> si_instr .)
    PARA            reduce using rule 8 (instruccion -> si_instr .)
    $end            reduce using rule 8 (instruccion -> si_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> si_instr .)


state 9

    (9) instruccion -> si_no_instr .

    IMPRIMIR        reduce using rule 9 (instruccion -> si_no_instr .)
    NUMERO          reduce using rule 9 (instruccion -> si_no_instr .)
    ID              reduce using rule 9 (instruccion -> si_no_instr .)
    MIENTRAS        reduce using rule 9 (instruccion -> si_no_instr .)
    IF              reduce using rule 9 (instruccion -> si_no_instr .)
    PARA            reduce using rule 9 (instruccion -> si_no_instr .)
    $end            reduce using rule 9 (instruccion -> si_no_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> si_no_instr .)


state 10

    (10) instruccion -> para_instr .

    IMPRIMIR        reduce using rule 10 (instruccion -> para_instr .)
    NUMERO          reduce using rule 10 (instruccion -> para_instr .)
    ID              reduce using rule 10 (instruccion -> para_instr .)
    MIENTRAS        reduce using rule 10 (instruccion -> para_instr .)
    IF              reduce using rule 10 (instruccion -> para_instr .)
    PARA            reduce using rule 10 (instruccion -> para_instr .)
    $end            reduce using rule 10 (instruccion -> para_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> para_instr .)


state 11

    (11) imprimir_instr -> IMPRIMIR . PARIZQ expresion_cadena PARDER PTCOMA

    PARIZQ          shift and go to state 18


state 12

    (12) definicion_instr -> NUMERO . ID PTCOMA

    ID              shift and go to state 19


state 13

    (13) asignacion_instr -> ID . IGUAL expresion_numerica PTCOMA

    IGUAL           shift and go to state 20


state 14

    (14) mientrastanto_instr -> MIENTRAS . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 21


state 15

    (15) si_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 22


state 16

    (17) para_instr -> PARA . NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    NUMERO          shift and go to state 23


state 17

    (2) instrucciones -> instrucciones instruccion .

    IMPRIMIR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NUMERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MIENTRAS        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 18

    (11) imprimir_instr -> IMPRIMIR PARIZQ . expresion_cadena PARDER PTCOMA
    (27) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (28) expresion_cadena -> . CADENA
    (29) expresion_cadena -> . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    CADENA          shift and go to state 26
    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_cadena               shift and go to state 25
    expresion_numerica             shift and go to state 27

state 19

    (12) definicion_instr -> NUMERO ID . PTCOMA

    PTCOMA          shift and go to state 32


state 20

    (13) asignacion_instr -> ID IGUAL . expresion_numerica PTCOMA
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 33

state 21

    (14) mientrastanto_instr -> MIENTRAS PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (30) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (31) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (32) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (33) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_logica               shift and go to state 34
    expresion_numerica             shift and go to state 35

state 22

    (15) si_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (30) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (31) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (32) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (33) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_logica               shift and go to state 36
    expresion_numerica             shift and go to state 35

state 23

    (17) para_instr -> PARA NUMERO . IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    IGUAL           shift and go to state 37


state 24

    (23) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 38

state 25

    (11) imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena . PARDER PTCOMA
    (27) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          shift and go to state 39
    CONCAT          shift and go to state 40


state 26

    (28) expresion_cadena -> CADENA .

    PARDER          reduce using rule 28 (expresion_cadena -> CADENA .)
    CONCAT          reduce using rule 28 (expresion_cadena -> CADENA .)


state 27

    (29) expresion_cadena -> expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 29 (expresion_cadena -> expresion_numerica .)
    CONCAT          reduce using rule 29 (expresion_cadena -> expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 28

    (22) expresion_numerica -> MENOS . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 45

state 29

    (24) expresion_numerica -> ENTERO .

    MAS             reduce using rule 24 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 24 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 24 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 24 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 24 (expresion_numerica -> ENTERO .)
    CONCAT          reduce using rule 24 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 24 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 24 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 24 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 24 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 24 (expresion_numerica -> ENTERO .)


state 30

    (25) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 25 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 25 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 25 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 25 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 25 (expresion_numerica -> DECIMAL .)
    CONCAT          reduce using rule 25 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 25 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 25 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 25 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 25 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 25 (expresion_numerica -> DECIMAL .)


state 31

    (26) expresion_numerica -> ID .

    MAS             reduce using rule 26 (expresion_numerica -> ID .)
    MENOS           reduce using rule 26 (expresion_numerica -> ID .)
    POR             reduce using rule 26 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 26 (expresion_numerica -> ID .)
    PARDER          reduce using rule 26 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 26 (expresion_numerica -> ID .)
    PTCOMA          reduce using rule 26 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 26 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 26 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 26 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 26 (expresion_numerica -> ID .)


state 32

    (12) definicion_instr -> NUMERO ID PTCOMA .

    IMPRIMIR        reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    NUMERO          reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    ID              reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    MIENTRAS        reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    IF              reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    PARA            reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    $end            reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)
    LLAVDER         reduce using rule 12 (definicion_instr -> NUMERO ID PTCOMA .)


state 33

    (13) asignacion_instr -> ID IGUAL expresion_numerica . PTCOMA
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMA          shift and go to state 46
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 34

    (14) mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 47


state 35

    (30) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (31) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (32) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (33) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAYQUE          shift and go to state 48
    MENQUE          shift and go to state 49
    IGUALQUE        shift and go to state 50
    NIGUALQUE       shift and go to state 51
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 36

    (15) si_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 52


state 37

    (17) para_instr -> PARA NUMERO IGUAL . ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    ENTERO          shift and go to state 53


state 38

    (23) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          shift and go to state 54
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 39

    (11) imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER . PTCOMA

    PTCOMA          shift and go to state 55


state 40

    (27) expresion_cadena -> expresion_cadena CONCAT . expresion_cadena
    (27) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (28) expresion_cadena -> . CADENA
    (29) expresion_cadena -> . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    CADENA          shift and go to state 26
    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_cadena               shift and go to state 56
    expresion_numerica             shift and go to state 27

state 41

    (18) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 57

state 42

    (19) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 58

state 43

    (20) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 59

state 44

    (21) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 60

state 45

    (22) expresion_numerica -> MENOS expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    CONCAT          reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 22 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]
  ! POR             [ shift and go to state 43 ]
  ! DIVIDIDO        [ shift and go to state 44 ]


state 46

    (13) asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .

    IMPRIMIR        reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    NUMERO          reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    ID              reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    MIENTRAS        reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    IF              reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    PARA            reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    $end            reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 13 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)


state 47

    (14) mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 61


state 48

    (30) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 62

state 49

    (31) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 63

state 50

    (32) expresion_logica -> expresion_numerica IGUALQUE . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 64

state 51

    (33) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (18) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (19) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (20) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (21) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (22) expresion_numerica -> . MENOS expresion_numerica
    (23) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (24) expresion_numerica -> . ENTERO
    (25) expresion_numerica -> . DECIMAL
    (26) expresion_numerica -> . ID

    MENOS           shift and go to state 28
    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    ID              shift and go to state 31

    expresion_numerica             shift and go to state 65

state 52

    (15) si_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 66


state 53

    (17) para_instr -> PARA NUMERO IGUAL ENTERO . HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    HASTA           shift and go to state 67


state 54

    (23) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    CONCAT          reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 23 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 55

    (11) imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .

    IMPRIMIR        reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    NUMERO          reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    ID              reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    MIENTRAS        reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    IF              reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    PARA            reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    $end            reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    LLAVDER         reduce using rule 11 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)


state 56

    (27) expresion_cadena -> expresion_cadena CONCAT expresion_cadena .
    (27) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          reduce using rule 27 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)
    CONCAT          reduce using rule 27 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)

  ! CONCAT          [ shift and go to state 40 ]


state 57

    (18) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CONCAT          reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44

  ! POR             [ reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 18 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]


state 58

    (19) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CONCAT          reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44

  ! POR             [ reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 19 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]


state 59

    (20) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CONCAT          reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 20 (expresion_numerica -> expresion_numerica POR expresion_numerica .)

  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]
  ! POR             [ shift and go to state 43 ]
  ! DIVIDIDO        [ shift and go to state 44 ]


state 60

    (21) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CONCAT          reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 21 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)

  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]
  ! POR             [ shift and go to state 43 ]
  ! DIVIDIDO        [ shift and go to state 44 ]


state 61

    (14) mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instrucciones                  shift and go to state 68
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 62

    (30) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 30 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 63

    (31) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 31 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 64

    (32) expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 32 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 65

    (33) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (18) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (19) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (20) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (21) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 33 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 66

    (15) si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instrucciones                  shift and go to state 69
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 67

    (17) para_instr -> PARA NUMERO IGUAL ENTERO HASTA . ENTERO LLAVIZQ instrucciones LLAVDER

    ENTERO          shift and go to state 70


state 68

    (14) mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 71
    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instruccion                    shift and go to state 17
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 69

    (15) si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 72
    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instruccion                    shift and go to state 17
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 70

    (17) para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 73


state 71

    (14) mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .

    IMPRIMIR        reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    PARA            reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 14 (mientrastanto_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)


state 72

    (15) si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .
    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    PARA            reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 15 (si_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 74


state 73

    (17) para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instrucciones                  shift and go to state 75
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 74

    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 76


state 75

    (17) para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 77
    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instruccion                    shift and go to state 17
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 76

    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instrucciones                  shift and go to state 78
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 77

    (17) para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .

    IMPRIMIR        reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    PARA            reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 17 (para_instr -> PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER .)


state 78

    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientrastanto_instr
    (8) instruccion -> . si_instr
    (9) instruccion -> . si_no_instr
    (10) instruccion -> . para_instr
    (11) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (12) definicion_instr -> . NUMERO ID PTCOMA
    (13) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (14) mientrastanto_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (15) si_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (16) si_no_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) para_instr -> . PARA NUMERO IGUAL ENTERO HASTA ENTERO LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 79
    IMPRIMIR        shift and go to state 11
    NUMERO          shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15
    PARA            shift and go to state 16

    instruccion                    shift and go to state 17
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientrastanto_instr            shift and go to state 7
    si_instr                       shift and go to state 8
    si_no_instr                    shift and go to state 9
    para_instr                     shift and go to state 10

state 79

    (16) si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    IMPRIMIR        reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    PARA            reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 16 (si_no_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)

